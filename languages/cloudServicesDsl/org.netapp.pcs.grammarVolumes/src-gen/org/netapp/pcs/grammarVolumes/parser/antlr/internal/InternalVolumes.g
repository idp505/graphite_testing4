/*
 * generated by Xtext 2.36.0
 */
grammar InternalVolumes;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
}

@lexer::header {
package org.netapp.pcs.grammarVolumes.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.netapp.pcs.grammarVolumes.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.netapp.pcs.grammarVolumes.services.VolumesGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/

 	private VolumesGrammarAccess grammarAccess;

    public InternalVolumesParser(TokenStream input, VolumesGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "CVO";
   	}

   	@Override
   	protected VolumesGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleCVO
entryRuleCVO returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCVORule()); }
	iv_ruleCVO=ruleCVO
	{ $current=$iv_ruleCVO.current; }
	EOF;

// Rule CVO
ruleCVO returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getCVOAccess().getCVOAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getCVOAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCVOAccess().getVolumesVolumeParserRuleCall_2_0_0());
					}
					lv_volumes_2_0=ruleVolume
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCVORule());
						}
						add(
							$current,
							"volumes",
							lv_volumes_2_0,
							"org.netapp.pcs.grammarVolumes.Volumes.Volume");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getCVOAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCVOAccess().getVolumesVolumeParserRuleCall_2_1_1_0());
						}
						lv_volumes_4_0=ruleVolume
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCVORule());
							}
							add(
								$current,
								"volumes",
								lv_volumes_4_0,
								"org.netapp.pcs.grammarVolumes.Volumes.Volume");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getCVOAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleVolume
entryRuleVolume returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVolumeRule()); }
	iv_ruleVolume=ruleVolume
	{ $current=$iv_ruleVolume.current; }
	EOF;

// Rule Volume
ruleVolume returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getVolumeAccess().getVolumeAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getVolumeAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='name'
			{
				newLeafNode(otherlv_2, grammarAccess.getVolumeAccess().getNameKeyword_2_0());
			}
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getVolumeAccess().getColonKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVolumeAccess().getNameEStringParserRuleCall_2_2_0());
					}
					lv_name_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVolumeRule());
						}
						set(
							$current,
							"name",
							lv_name_4_0,
							"org.netapp.pcs.grammarVolumes.Volumes.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getVolumeAccess().getCommaKeyword_2_3());
			}
		)?
		(
			otherlv_6='identifier'
			{
				newLeafNode(otherlv_6, grammarAccess.getVolumeAccess().getIdentifierKeyword_3_0());
			}
			otherlv_7=':'
			{
				newLeafNode(otherlv_7, grammarAccess.getVolumeAccess().getColonKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVolumeAccess().getIdentifierEStringParserRuleCall_3_2_0());
					}
					lv_identifier_8_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVolumeRule());
						}
						set(
							$current,
							"identifier",
							lv_identifier_8_0,
							"org.netapp.pcs.grammarVolumes.Volumes.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9=','
			{
				newLeafNode(otherlv_9, grammarAccess.getVolumeAccess().getCommaKeyword_3_3());
			}
		)?
		(
			otherlv_10='state'
			{
				newLeafNode(otherlv_10, grammarAccess.getVolumeAccess().getStateKeyword_4_0());
			}
			otherlv_11=':'
			{
				newLeafNode(otherlv_11, grammarAccess.getVolumeAccess().getColonKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVolumeAccess().getStateEStringParserRuleCall_4_2_0());
					}
					lv_state_12_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVolumeRule());
						}
						set(
							$current,
							"state",
							lv_state_12_0,
							"org.netapp.pcs.grammarVolumes.Volumes.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_13=','
			{
				newLeafNode(otherlv_13, grammarAccess.getVolumeAccess().getCommaKeyword_4_3());
			}
		)?
		(
			otherlv_14='size'
			{
				newLeafNode(otherlv_14, grammarAccess.getVolumeAccess().getSizeKeyword_5_0());
			}
			otherlv_15=':'
			{
				newLeafNode(otherlv_15, grammarAccess.getVolumeAccess().getColonKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVolumeAccess().getSizeEDoubleParserRuleCall_5_2_0());
					}
					lv_size_16_0=ruleEDouble
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVolumeRule());
						}
						set(
							$current,
							"size",
							lv_size_16_0,
							"org.netapp.pcs.grammarVolumes.Volumes.EDouble");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_17=','
			{
				newLeafNode(otherlv_17, grammarAccess.getVolumeAccess().getCommaKeyword_5_3());
			}
		)?
		(
			otherlv_18='size_unit'
			{
				newLeafNode(otherlv_18, grammarAccess.getVolumeAccess().getSize_unitKeyword_6_0());
			}
			otherlv_19=':'
			{
				newLeafNode(otherlv_19, grammarAccess.getVolumeAccess().getColonKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVolumeAccess().getSize_unitEStringParserRuleCall_6_2_0());
					}
					lv_size_unit_20_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVolumeRule());
						}
						set(
							$current,
							"size_unit",
							lv_size_unit_20_0,
							"org.netapp.pcs.grammarVolumes.Volumes.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_21=','
			{
				newLeafNode(otherlv_21, grammarAccess.getVolumeAccess().getCommaKeyword_6_3());
			}
		)?
		(
			otherlv_22='svm_name'
			{
				newLeafNode(otherlv_22, grammarAccess.getVolumeAccess().getSvm_nameKeyword_7_0());
			}
			otherlv_23=':'
			{
				newLeafNode(otherlv_23, grammarAccess.getVolumeAccess().getColonKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVolumeAccess().getSvm_nameEStringParserRuleCall_7_2_0());
					}
					lv_svm_name_24_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVolumeRule());
						}
						set(
							$current,
							"svm_name",
							lv_svm_name_24_0,
							"org.netapp.pcs.grammarVolumes.Volumes.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_25=','
			{
				newLeafNode(otherlv_25, grammarAccess.getVolumeAccess().getCommaKeyword_7_3());
			}
		)?
		(
			otherlv_26='export_policy_type'
			{
				newLeafNode(otherlv_26, grammarAccess.getVolumeAccess().getExport_policy_typeKeyword_8_0());
			}
			otherlv_27=':'
			{
				newLeafNode(otherlv_27, grammarAccess.getVolumeAccess().getColonKeyword_8_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVolumeAccess().getExport_policy_typeEStringParserRuleCall_8_2_0());
					}
					lv_export_policy_type_28_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVolumeRule());
						}
						set(
							$current,
							"export_policy_type",
							lv_export_policy_type_28_0,
							"org.netapp.pcs.grammarVolumes.Volumes.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_29=','
			{
				newLeafNode(otherlv_29, grammarAccess.getVolumeAccess().getCommaKeyword_8_3());
			}
		)?
		(
			otherlv_30='export_policy_ip'
			{
				newLeafNode(otherlv_30, grammarAccess.getVolumeAccess().getExport_policy_ipKeyword_9_0());
			}
			otherlv_31=':'
			{
				newLeafNode(otherlv_31, grammarAccess.getVolumeAccess().getColonKeyword_9_1());
			}
			otherlv_32='{'
			{
				newLeafNode(otherlv_32, grammarAccess.getVolumeAccess().getLeftCurlyBracketKeyword_9_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVolumeAccess().getExport_policy_ipEStringParserRuleCall_9_3_0());
					}
					lv_export_policy_ip_33_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVolumeRule());
						}
						add(
							$current,
							"export_policy_ip",
							lv_export_policy_ip_33_0,
							"org.netapp.pcs.grammarVolumes.Volumes.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_34=','
				{
					newLeafNode(otherlv_34, grammarAccess.getVolumeAccess().getCommaKeyword_9_4_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getVolumeAccess().getExport_policy_ipEStringParserRuleCall_9_4_1_0());
						}
						lv_export_policy_ip_35_0=ruleEString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVolumeRule());
							}
							add(
								$current,
								"export_policy_ip",
								lv_export_policy_ip_35_0,
								"org.netapp.pcs.grammarVolumes.Volumes.EString");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_36='}'
			{
				newLeafNode(otherlv_36, grammarAccess.getVolumeAccess().getRightCurlyBracketKeyword_9_5());
			}
			otherlv_37=','
			{
				newLeafNode(otherlv_37, grammarAccess.getVolumeAccess().getCommaKeyword_9_6());
			}
		)?
		(
			otherlv_38='export_policy_nfs_version'
			{
				newLeafNode(otherlv_38, grammarAccess.getVolumeAccess().getExport_policy_nfs_versionKeyword_10_0());
			}
			otherlv_39=':'
			{
				newLeafNode(otherlv_39, grammarAccess.getVolumeAccess().getColonKeyword_10_1());
			}
			otherlv_40='{'
			{
				newLeafNode(otherlv_40, grammarAccess.getVolumeAccess().getLeftCurlyBracketKeyword_10_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVolumeAccess().getExport_policy_nfs_versionEStringParserRuleCall_10_3_0());
					}
					lv_export_policy_nfs_version_41_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVolumeRule());
						}
						add(
							$current,
							"export_policy_nfs_version",
							lv_export_policy_nfs_version_41_0,
							"org.netapp.pcs.grammarVolumes.Volumes.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_42=','
				{
					newLeafNode(otherlv_42, grammarAccess.getVolumeAccess().getCommaKeyword_10_4_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getVolumeAccess().getExport_policy_nfs_versionEStringParserRuleCall_10_4_1_0());
						}
						lv_export_policy_nfs_version_43_0=ruleEString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVolumeRule());
							}
							add(
								$current,
								"export_policy_nfs_version",
								lv_export_policy_nfs_version_43_0,
								"org.netapp.pcs.grammarVolumes.Volumes.EString");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_44='}'
			{
				newLeafNode(otherlv_44, grammarAccess.getVolumeAccess().getRightCurlyBracketKeyword_10_5());
			}
			otherlv_45=','
			{
				newLeafNode(otherlv_45, grammarAccess.getVolumeAccess().getCommaKeyword_10_6());
			}
		)?
		(
			otherlv_46='snapshot_policy'
			{
				newLeafNode(otherlv_46, grammarAccess.getVolumeAccess().getSnapshot_policyKeyword_11_0());
			}
			otherlv_47=':'
			{
				newLeafNode(otherlv_47, grammarAccess.getVolumeAccess().getColonKeyword_11_1());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVolumeRule());
						}
					}
					otherlv_48=RULE_ID
					{
						newLeafNode(otherlv_48, grammarAccess.getVolumeAccess().getSnapshot_policySnapshotPolicyCrossReference_11_2_0());
					}
				)
			)
			otherlv_49=','
			{
				newLeafNode(otherlv_49, grammarAccess.getVolumeAccess().getCommaKeyword_11_3());
			}
		)?
		(
			otherlv_50='environment'
			{
				newLeafNode(otherlv_50, grammarAccess.getVolumeAccess().getEnvironmentKeyword_12_0());
			}
			otherlv_51=':'
			{
				newLeafNode(otherlv_51, grammarAccess.getVolumeAccess().getColonKeyword_12_1());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVolumeRule());
						}
					}
					otherlv_52=RULE_ID
					{
						newLeafNode(otherlv_52, grammarAccess.getVolumeAccess().getEnvironmentEnvironmentCrossReference_12_2_0());
					}
				)
			)
		)?
		otherlv_53='}'
		{
			newLeafNode(otherlv_53, grammarAccess.getVolumeAccess().getRightCurlyBracketKeyword_13());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleEDouble
entryRuleEDouble returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEDoubleRule()); }
	iv_ruleEDouble=ruleEDouble
	{ $current=$iv_ruleEDouble.current.getText(); }
	EOF;

// Rule EDouble
ruleEDouble returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_0());
			}
		)?
		(
			this_INT_1=RULE_INT
			{
				$current.merge(this_INT_1);
			}
			{
				newLeafNode(this_INT_1, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_1());
			}
		)?
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEDoubleAccess().getFullStopKeyword_2_0());
			}
			this_INT_3=RULE_INT
			{
				$current.merge(this_INT_3);
			}
			{
				newLeafNode(this_INT_3, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_2_1());
			}
			(
				(
					kw='E'
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getEDoubleAccess().getEKeyword_2_2_0_0());
					}
					    |
					kw='e'
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getEDoubleAccess().getEKeyword_2_2_0_1());
					}
				)
				(
					kw='-'
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_2_2_1());
					}
				)?
				this_INT_7=RULE_INT
				{
					$current.merge(this_INT_7);
				}
				{
					newLeafNode(this_INT_7, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_2_2_2());
				}
			)?
		)?
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
