/*
 * generated by Xtext 2.36.0
 */
grammar InternalReplicationMappings;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package org.netapp.pcs.grammarSnapMirror.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.netapp.pcs.grammarSnapMirror.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.netapp.pcs.grammarSnapMirror.services.ReplicationMappingsGrammarAccess;

}
@parser::members {
	private ReplicationMappingsGrammarAccess grammarAccess;

	public void setGrammarAccess(ReplicationMappingsGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleReplicationPolicy
entryRuleReplicationPolicy
:
{ before(grammarAccess.getReplicationPolicyRule()); }
	 ruleReplicationPolicy
{ after(grammarAccess.getReplicationPolicyRule()); } 
	 EOF 
;

// Rule ReplicationPolicy
ruleReplicationPolicy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReplicationPolicyAccess().getGroup()); }
		(rule__ReplicationPolicy__Group__0)
		{ after(grammarAccess.getReplicationPolicyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReplicationMappings
entryRuleReplicationMappings
:
{ before(grammarAccess.getReplicationMappingsRule()); }
	 ruleReplicationMappings
{ after(grammarAccess.getReplicationMappingsRule()); } 
	 EOF 
;

// Rule ReplicationMappings
ruleReplicationMappings 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReplicationMappingsAccess().getGroup()); }
		(rule__ReplicationMappings__Group__0)
		{ after(grammarAccess.getReplicationMappingsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEInt
entryRuleEInt
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEIntAccess().getGroup()); }
		(rule__EInt__Group__0)
		{ after(grammarAccess.getEIntAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReplicationMappingsAccess().getHyphenMinusGreaterThanSignKeyword_2_0()); }
		'->'
		{ after(grammarAccess.getReplicationMappingsAccess().getHyphenMinusGreaterThanSignKeyword_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getReplicationMappingsAccess().getBidirectionalAssignment_2_1()); }
		(rule__ReplicationMappings__BidirectionalAssignment_2_1)
		{ after(grammarAccess.getReplicationMappingsAccess().getBidirectionalAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationPolicy__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplicationPolicy__Group__0__Impl
	rule__ReplicationPolicy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationPolicy__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplicationPolicyAccess().getReplicationPolicyAction_0()); }
	()
	{ after(grammarAccess.getReplicationPolicyAccess().getReplicationPolicyAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationPolicy__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplicationPolicy__Group__1__Impl
	rule__ReplicationPolicy__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationPolicy__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplicationPolicyAccess().getReplication_mappingsAssignment_1()); }
	(rule__ReplicationPolicy__Replication_mappingsAssignment_1)
	{ after(grammarAccess.getReplicationPolicyAccess().getReplication_mappingsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationPolicy__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplicationPolicy__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationPolicy__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplicationPolicyAccess().getGroup_2()); }
	(rule__ReplicationPolicy__Group_2__0)*
	{ after(grammarAccess.getReplicationPolicyAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReplicationPolicy__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplicationPolicy__Group_2__0__Impl
	rule__ReplicationPolicy__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationPolicy__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplicationPolicyAccess().getNEWLINETerminalRuleCall_2_0()); }
	RULE_NEWLINE
	{ after(grammarAccess.getReplicationPolicyAccess().getNEWLINETerminalRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationPolicy__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplicationPolicy__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationPolicy__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplicationPolicyAccess().getReplication_mappingsAssignment_2_1()); }
	(rule__ReplicationPolicy__Replication_mappingsAssignment_2_1)
	{ after(grammarAccess.getReplicationPolicyAccess().getReplication_mappingsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReplicationMappings__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplicationMappings__Group__0__Impl
	rule__ReplicationMappings__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplicationMappingsAccess().getSnapMirrorAction_0()); }
	()
	{ after(grammarAccess.getReplicationMappingsAccess().getSnapMirrorAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplicationMappings__Group__1__Impl
	rule__ReplicationMappings__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplicationMappingsAccess().getGroup_1()); }
	(rule__ReplicationMappings__Group_1__0)?
	{ after(grammarAccess.getReplicationMappingsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplicationMappings__Group__2__Impl
	rule__ReplicationMappings__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplicationMappingsAccess().getAlternatives_2()); }
	(rule__ReplicationMappings__Alternatives_2)
	{ after(grammarAccess.getReplicationMappingsAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplicationMappings__Group__3__Impl
	rule__ReplicationMappings__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplicationMappingsAccess().getGroup_3()); }
	(rule__ReplicationMappings__Group_3__0)?
	{ after(grammarAccess.getReplicationMappingsAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplicationMappings__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplicationMappingsAccess().getGroup_4()); }
	(rule__ReplicationMappings__Group_4__0)?
	{ after(grammarAccess.getReplicationMappingsAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReplicationMappings__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplicationMappings__Group_1__0__Impl
	rule__ReplicationMappings__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplicationMappingsAccess().getSource_cvoAssignment_1_0()); }
	(rule__ReplicationMappings__Source_cvoAssignment_1_0)
	{ after(grammarAccess.getReplicationMappingsAccess().getSource_cvoAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplicationMappings__Group_1__1__Impl
	rule__ReplicationMappings__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplicationMappingsAccess().getFullStopKeyword_1_1()); }
	'.'
	{ after(grammarAccess.getReplicationMappingsAccess().getFullStopKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplicationMappings__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplicationMappingsAccess().getSource_volumeAssignment_1_2()); }
	(rule__ReplicationMappings__Source_volumeAssignment_1_2)?
	{ after(grammarAccess.getReplicationMappingsAccess().getSource_volumeAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReplicationMappings__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplicationMappings__Group_3__0__Impl
	rule__ReplicationMappings__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplicationMappingsAccess().getDestination_cvoAssignment_3_0()); }
	(rule__ReplicationMappings__Destination_cvoAssignment_3_0)
	{ after(grammarAccess.getReplicationMappingsAccess().getDestination_cvoAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplicationMappings__Group_3__1__Impl
	rule__ReplicationMappings__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplicationMappingsAccess().getFullStopKeyword_3_1()); }
	'.'
	{ after(grammarAccess.getReplicationMappingsAccess().getFullStopKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplicationMappings__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplicationMappingsAccess().getDestination_volumeAssignment_3_2()); }
	(rule__ReplicationMappings__Destination_volumeAssignment_3_2)?
	{ after(grammarAccess.getReplicationMappingsAccess().getDestination_volumeAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReplicationMappings__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplicationMappings__Group_4__0__Impl
	rule__ReplicationMappings__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplicationMappingsAccess().getLeftCurlyBracketKeyword_4_0()); }
	'{'
	{ after(grammarAccess.getReplicationMappingsAccess().getLeftCurlyBracketKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplicationMappings__Group_4__1__Impl
	rule__ReplicationMappings__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplicationMappingsAccess().getGroup_4_1()); }
	(rule__ReplicationMappings__Group_4_1__0)?
	{ after(grammarAccess.getReplicationMappingsAccess().getGroup_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplicationMappings__Group_4__2__Impl
	rule__ReplicationMappings__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplicationMappingsAccess().getGroup_4_2()); }
	(rule__ReplicationMappings__Group_4_2__0)?
	{ after(grammarAccess.getReplicationMappingsAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplicationMappings__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplicationMappingsAccess().getRightCurlyBracketKeyword_4_3()); }
	'}'
	{ after(grammarAccess.getReplicationMappingsAccess().getRightCurlyBracketKeyword_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReplicationMappings__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplicationMappings__Group_4_1__0__Impl
	rule__ReplicationMappings__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplicationMappingsAccess().getPolicyKeyword_4_1_0()); }
	'policy'
	{ after(grammarAccess.getReplicationMappingsAccess().getPolicyKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplicationMappings__Group_4_1__1__Impl
	rule__ReplicationMappings__Group_4_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplicationMappingsAccess().getColonKeyword_4_1_1()); }
	':'
	{ after(grammarAccess.getReplicationMappingsAccess().getColonKeyword_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group_4_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplicationMappings__Group_4_1__2__Impl
	rule__ReplicationMappings__Group_4_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group_4_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplicationMappingsAccess().getPolicyAssignment_4_1_2()); }
	(rule__ReplicationMappings__PolicyAssignment_4_1_2)
	{ after(grammarAccess.getReplicationMappingsAccess().getPolicyAssignment_4_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group_4_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplicationMappings__Group_4_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group_4_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplicationMappingsAccess().getCommaKeyword_4_1_3()); }
	','
	{ after(grammarAccess.getReplicationMappingsAccess().getCommaKeyword_4_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReplicationMappings__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplicationMappings__Group_4_2__0__Impl
	rule__ReplicationMappings__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplicationMappingsAccess().getMax_transfer_rateKeyword_4_2_0()); }
	'max_transfer_rate'
	{ after(grammarAccess.getReplicationMappingsAccess().getMax_transfer_rateKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplicationMappings__Group_4_2__1__Impl
	rule__ReplicationMappings__Group_4_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplicationMappingsAccess().getColonKeyword_4_2_1()); }
	':'
	{ after(grammarAccess.getReplicationMappingsAccess().getColonKeyword_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group_4_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReplicationMappings__Group_4_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Group_4_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReplicationMappingsAccess().getMax_transfer_rateAssignment_4_2_2()); }
	(rule__ReplicationMappings__Max_transfer_rateAssignment_4_2_2)
	{ after(grammarAccess.getReplicationMappingsAccess().getMax_transfer_rateAssignment_4_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EInt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__0__Impl
	rule__EInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReplicationPolicy__Replication_mappingsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReplicationPolicyAccess().getReplication_mappingsReplicationMappingsParserRuleCall_1_0()); }
		ruleReplicationMappings
		{ after(grammarAccess.getReplicationPolicyAccess().getReplication_mappingsReplicationMappingsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationPolicy__Replication_mappingsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReplicationPolicyAccess().getReplication_mappingsReplicationMappingsParserRuleCall_2_1_0()); }
		ruleReplicationMappings
		{ after(grammarAccess.getReplicationPolicyAccess().getReplication_mappingsReplicationMappingsParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Source_cvoAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReplicationMappingsAccess().getSource_cvoCVOCrossReference_1_0_0()); }
		(
			{ before(grammarAccess.getReplicationMappingsAccess().getSource_cvoCVOIDTerminalRuleCall_1_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getReplicationMappingsAccess().getSource_cvoCVOIDTerminalRuleCall_1_0_0_1()); }
		)
		{ after(grammarAccess.getReplicationMappingsAccess().getSource_cvoCVOCrossReference_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Source_volumeAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReplicationMappingsAccess().getSource_volumeVolumeCrossReference_1_2_0()); }
		(
			{ before(grammarAccess.getReplicationMappingsAccess().getSource_volumeVolumeIDTerminalRuleCall_1_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getReplicationMappingsAccess().getSource_volumeVolumeIDTerminalRuleCall_1_2_0_1()); }
		)
		{ after(grammarAccess.getReplicationMappingsAccess().getSource_volumeVolumeCrossReference_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__BidirectionalAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReplicationMappingsAccess().getBidirectionalLessThanSignHyphenMinusGreaterThanSignKeyword_2_1_0()); }
		(
			{ before(grammarAccess.getReplicationMappingsAccess().getBidirectionalLessThanSignHyphenMinusGreaterThanSignKeyword_2_1_0()); }
			'<->'
			{ after(grammarAccess.getReplicationMappingsAccess().getBidirectionalLessThanSignHyphenMinusGreaterThanSignKeyword_2_1_0()); }
		)
		{ after(grammarAccess.getReplicationMappingsAccess().getBidirectionalLessThanSignHyphenMinusGreaterThanSignKeyword_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Destination_cvoAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReplicationMappingsAccess().getDestination_cvoCVOCrossReference_3_0_0()); }
		(
			{ before(grammarAccess.getReplicationMappingsAccess().getDestination_cvoCVOIDTerminalRuleCall_3_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getReplicationMappingsAccess().getDestination_cvoCVOIDTerminalRuleCall_3_0_0_1()); }
		)
		{ after(grammarAccess.getReplicationMappingsAccess().getDestination_cvoCVOCrossReference_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Destination_volumeAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReplicationMappingsAccess().getDestination_volumeVolumeCrossReference_3_2_0()); }
		(
			{ before(grammarAccess.getReplicationMappingsAccess().getDestination_volumeVolumeIDTerminalRuleCall_3_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getReplicationMappingsAccess().getDestination_volumeVolumeIDTerminalRuleCall_3_2_0_1()); }
		)
		{ after(grammarAccess.getReplicationMappingsAccess().getDestination_volumeVolumeCrossReference_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__PolicyAssignment_4_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReplicationMappingsAccess().getPolicySnapshotPolicyCrossReference_4_1_2_0()); }
		(
			{ before(grammarAccess.getReplicationMappingsAccess().getPolicySnapshotPolicyIDTerminalRuleCall_4_1_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getReplicationMappingsAccess().getPolicySnapshotPolicyIDTerminalRuleCall_4_1_2_0_1()); }
		)
		{ after(grammarAccess.getReplicationMappingsAccess().getPolicySnapshotPolicyCrossReference_4_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReplicationMappings__Max_transfer_rateAssignment_4_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReplicationMappingsAccess().getMax_transfer_rateEIntParserRuleCall_4_2_2_0()); }
		ruleEInt
		{ after(grammarAccess.getReplicationMappingsAccess().getMax_transfer_rateEIntParserRuleCall_4_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_NEWLINE : (' '|'\t')* '\r'? '\n' (' '|'\t')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
