/*
 * generated by Xtext 2.36.0
 */
package structurizr.expressions.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class StructurizrExpressionsGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class EntryRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "structurizr.expressions.StructurizrExpressions.EntryRule");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSystemLandscapeView_IncludeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSystemLandscapeView_ExcludeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cSystemContextView_IncludeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cSystemContextView_ExcludeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cContainerView_IncludeParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cContainerView_ExcludeParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cComponentView_IncludeParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cComponentView_ExcludeParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		
		//EntryRule returns ViewElement:
		//    SystemLandscapeView_Include | SystemLandscapeView_Exclude | SystemContextView_Include | SystemContextView_Exclude | ContainerView_Include | ContainerView_Exclude | ComponentView_Include | ComponentView_Exclude;
		@Override public ParserRule getRule() { return rule; }
		
		//SystemLandscapeView_Include | SystemLandscapeView_Exclude | SystemContextView_Include | SystemContextView_Exclude | ContainerView_Include | ContainerView_Exclude | ComponentView_Include | ComponentView_Exclude
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SystemLandscapeView_Include
		public RuleCall getSystemLandscapeView_IncludeParserRuleCall_0() { return cSystemLandscapeView_IncludeParserRuleCall_0; }
		
		//SystemLandscapeView_Exclude
		public RuleCall getSystemLandscapeView_ExcludeParserRuleCall_1() { return cSystemLandscapeView_ExcludeParserRuleCall_1; }
		
		//SystemContextView_Include
		public RuleCall getSystemContextView_IncludeParserRuleCall_2() { return cSystemContextView_IncludeParserRuleCall_2; }
		
		//SystemContextView_Exclude
		public RuleCall getSystemContextView_ExcludeParserRuleCall_3() { return cSystemContextView_ExcludeParserRuleCall_3; }
		
		//ContainerView_Include
		public RuleCall getContainerView_IncludeParserRuleCall_4() { return cContainerView_IncludeParserRuleCall_4; }
		
		//ContainerView_Exclude
		public RuleCall getContainerView_ExcludeParserRuleCall_5() { return cContainerView_ExcludeParserRuleCall_5; }
		
		//ComponentView_Include
		public RuleCall getComponentView_IncludeParserRuleCall_6() { return cComponentView_IncludeParserRuleCall_6; }
		
		//ComponentView_Exclude
		public RuleCall getComponentView_ExcludeParserRuleCall_7() { return cComponentView_ExcludeParserRuleCall_7; }
	}
	public class SystemLandscapeView_IncludeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "structurizr.expressions.StructurizrExpressions.SystemLandscapeView_Include");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSystemLandscapeViewAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cIncludeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIncludeConditionElementParserRuleCall_1_0 = (RuleCall)cIncludeAssignment_1.eContents().get(0);
		
		//SystemLandscapeView_Include returns SystemLandscapeView:
		//    {SystemLandscapeView}
		//    (include=ConditionElement)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{SystemLandscapeView}
		//(include=ConditionElement)?
		public Group getGroup() { return cGroup; }
		
		//{SystemLandscapeView}
		public Action getSystemLandscapeViewAction_0() { return cSystemLandscapeViewAction_0; }
		
		//(include=ConditionElement)?
		public Assignment getIncludeAssignment_1() { return cIncludeAssignment_1; }
		
		//ConditionElement
		public RuleCall getIncludeConditionElementParserRuleCall_1_0() { return cIncludeConditionElementParserRuleCall_1_0; }
	}
	public class SystemLandscapeView_ExcludeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "structurizr.expressions.StructurizrExpressions.SystemLandscapeView_Exclude");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSystemLandscapeViewAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cExcludeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cExcludeConditionElementParserRuleCall_1_0 = (RuleCall)cExcludeAssignment_1.eContents().get(0);
		
		//SystemLandscapeView_Exclude returns SystemLandscapeView:
		//    {SystemLandscapeView}
		//    (exclude=ConditionElement)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{SystemLandscapeView}
		//(exclude=ConditionElement)?
		public Group getGroup() { return cGroup; }
		
		//{SystemLandscapeView}
		public Action getSystemLandscapeViewAction_0() { return cSystemLandscapeViewAction_0; }
		
		//(exclude=ConditionElement)?
		public Assignment getExcludeAssignment_1() { return cExcludeAssignment_1; }
		
		//ConditionElement
		public RuleCall getExcludeConditionElementParserRuleCall_1_0() { return cExcludeConditionElementParserRuleCall_1_0; }
	}
	public class SystemContextView_IncludeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "structurizr.expressions.StructurizrExpressions.SystemContextView_Include");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSystemContextViewAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cIncludeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIncludeConditionElementParserRuleCall_1_0 = (RuleCall)cIncludeAssignment_1.eContents().get(0);
		
		//SystemContextView_Include returns SystemContextView:
		//    {SystemContextView}
		//    (include=ConditionElement)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{SystemContextView}
		//(include=ConditionElement)?
		public Group getGroup() { return cGroup; }
		
		//{SystemContextView}
		public Action getSystemContextViewAction_0() { return cSystemContextViewAction_0; }
		
		//(include=ConditionElement)?
		public Assignment getIncludeAssignment_1() { return cIncludeAssignment_1; }
		
		//ConditionElement
		public RuleCall getIncludeConditionElementParserRuleCall_1_0() { return cIncludeConditionElementParserRuleCall_1_0; }
	}
	public class SystemContextView_ExcludeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "structurizr.expressions.StructurizrExpressions.SystemContextView_Exclude");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSystemContextViewAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cExcludeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cExcludeConditionElementParserRuleCall_1_0 = (RuleCall)cExcludeAssignment_1.eContents().get(0);
		
		//SystemContextView_Exclude returns SystemContextView:
		//    {SystemContextView}
		//    (exclude=ConditionElement)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{SystemContextView}
		//(exclude=ConditionElement)?
		public Group getGroup() { return cGroup; }
		
		//{SystemContextView}
		public Action getSystemContextViewAction_0() { return cSystemContextViewAction_0; }
		
		//(exclude=ConditionElement)?
		public Assignment getExcludeAssignment_1() { return cExcludeAssignment_1; }
		
		//ConditionElement
		public RuleCall getExcludeConditionElementParserRuleCall_1_0() { return cExcludeConditionElementParserRuleCall_1_0; }
	}
	public class ContainerView_IncludeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "structurizr.expressions.StructurizrExpressions.ContainerView_Include");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cContainerViewAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cIncludeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIncludeConditionElementParserRuleCall_1_0 = (RuleCall)cIncludeAssignment_1.eContents().get(0);
		
		//ContainerView_Include returns ContainerView:
		//    {ContainerView}
		//    (include=ConditionElement)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{ContainerView}
		//(include=ConditionElement)?
		public Group getGroup() { return cGroup; }
		
		//{ContainerView}
		public Action getContainerViewAction_0() { return cContainerViewAction_0; }
		
		//(include=ConditionElement)?
		public Assignment getIncludeAssignment_1() { return cIncludeAssignment_1; }
		
		//ConditionElement
		public RuleCall getIncludeConditionElementParserRuleCall_1_0() { return cIncludeConditionElementParserRuleCall_1_0; }
	}
	public class ContainerView_ExcludeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "structurizr.expressions.StructurizrExpressions.ContainerView_Exclude");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cContainerViewAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cExcludeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cExcludeConditionElementParserRuleCall_1_0 = (RuleCall)cExcludeAssignment_1.eContents().get(0);
		
		//ContainerView_Exclude returns ContainerView:
		//    {ContainerView}
		//    (exclude=ConditionElement)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{ContainerView}
		//(exclude=ConditionElement)?
		public Group getGroup() { return cGroup; }
		
		//{ContainerView}
		public Action getContainerViewAction_0() { return cContainerViewAction_0; }
		
		//(exclude=ConditionElement)?
		public Assignment getExcludeAssignment_1() { return cExcludeAssignment_1; }
		
		//ConditionElement
		public RuleCall getExcludeConditionElementParserRuleCall_1_0() { return cExcludeConditionElementParserRuleCall_1_0; }
	}
	public class ComponentView_IncludeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "structurizr.expressions.StructurizrExpressions.ComponentView_Include");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cComponentViewAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cIncludeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIncludeConditionElementParserRuleCall_1_0 = (RuleCall)cIncludeAssignment_1.eContents().get(0);
		
		//ComponentView_Include returns ComponentView:
		//    {ComponentView}
		//    (include=ConditionElement)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{ComponentView}
		//(include=ConditionElement)?
		public Group getGroup() { return cGroup; }
		
		//{ComponentView}
		public Action getComponentViewAction_0() { return cComponentViewAction_0; }
		
		//(include=ConditionElement)?
		public Assignment getIncludeAssignment_1() { return cIncludeAssignment_1; }
		
		//ConditionElement
		public RuleCall getIncludeConditionElementParserRuleCall_1_0() { return cIncludeConditionElementParserRuleCall_1_0; }
	}
	public class ComponentView_ExcludeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "structurizr.expressions.StructurizrExpressions.ComponentView_Exclude");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cComponentViewAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cExcludeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cExcludeConditionElementParserRuleCall_1_0 = (RuleCall)cExcludeAssignment_1.eContents().get(0);
		
		//ComponentView_Exclude returns ComponentView:
		//    {ComponentView}
		//    (exclude=ConditionElement)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{ComponentView}
		//(exclude=ConditionElement)?
		public Group getGroup() { return cGroup; }
		
		//{ComponentView}
		public Action getComponentViewAction_0() { return cComponentViewAction_0; }
		
		//(exclude=ConditionElement)?
		public Assignment getExcludeAssignment_1() { return cExcludeAssignment_1; }
		
		//ConditionElement
		public RuleCall getExcludeConditionElementParserRuleCall_1_0() { return cExcludeConditionElementParserRuleCall_1_0; }
	}
	public class ConditionElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "structurizr.expressions.StructurizrExpressions.ConditionElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNoFilterConditionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFilterConditionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ConditionElement returns ConditionElement:
		//    NoFilterCondition | FilterCondition;
		@Override public ParserRule getRule() { return rule; }
		
		//NoFilterCondition | FilterCondition
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NoFilterCondition
		public RuleCall getNoFilterConditionParserRuleCall_0() { return cNoFilterConditionParserRuleCall_0; }
		
		//FilterCondition
		public RuleCall getFilterConditionParserRuleCall_1() { return cFilterConditionParserRuleCall_1; }
	}
	public class NoFilterConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "structurizr.expressions.StructurizrExpressions.NoFilterCondition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cNoFilterConditionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAsteriskKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//NoFilterCondition returns NoFilterCondition:
		//    {NoFilterCondition}
		//    '*';
		@Override public ParserRule getRule() { return rule; }
		
		//{NoFilterCondition}
		//'*'
		public Group getGroup() { return cGroup; }
		
		//{NoFilterCondition}
		public Action getNoFilterConditionAction_0() { return cNoFilterConditionAction_0; }
		
		//'*'
		public Keyword getAsteriskKeyword_1() { return cAsteriskKeyword_1; }
	}
	public class FilterConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "structurizr.expressions.StructurizrExpressions.FilterCondition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCompositeConditionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cElementFilterConditionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRelationshipFilterConditionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//FilterCondition returns FilterCondition:
		//    CompositeCondition | ElementFilterCondition | RelationshipFilterCondition;
		@Override public ParserRule getRule() { return rule; }
		
		//CompositeCondition | ElementFilterCondition | RelationshipFilterCondition
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//CompositeCondition
		public RuleCall getCompositeConditionParserRuleCall_0() { return cCompositeConditionParserRuleCall_0; }
		
		//ElementFilterCondition
		public RuleCall getElementFilterConditionParserRuleCall_1() { return cElementFilterConditionParserRuleCall_1; }
		
		//RelationshipFilterCondition
		public RuleCall getRelationshipFilterConditionParserRuleCall_2() { return cRelationshipFilterConditionParserRuleCall_2; }
	}
	public class CompositeConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "structurizr.expressions.StructurizrExpressions.CompositeCondition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCompositeConditionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLeftAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLeftFilterConditionParserRuleCall_2_0 = (RuleCall)cLeftAssignment_2.eContents().get(0);
		private final Assignment cLogicalOperationAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLogicalOperationConditionLogicalOperationEnumRuleCall_3_0 = (RuleCall)cLogicalOperationAssignment_3.eContents().get(0);
		private final Assignment cRightAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRightFilterConditionParserRuleCall_4_0 = (RuleCall)cRightAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//CompositeCondition returns CompositeCondition:
		//    {CompositeCondition}
		//    '{' (left=FilterCondition)? logicalOperation=ConditionLogicalOperation (right=FilterCondition)? '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{CompositeCondition}
		//'{' (left=FilterCondition)? logicalOperation=ConditionLogicalOperation (right=FilterCondition)? '}'
		public Group getGroup() { return cGroup; }
		
		//{CompositeCondition}
		public Action getCompositeConditionAction_0() { return cCompositeConditionAction_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(left=FilterCondition)?
		public Assignment getLeftAssignment_2() { return cLeftAssignment_2; }
		
		//FilterCondition
		public RuleCall getLeftFilterConditionParserRuleCall_2_0() { return cLeftFilterConditionParserRuleCall_2_0; }
		
		//logicalOperation=ConditionLogicalOperation
		public Assignment getLogicalOperationAssignment_3() { return cLogicalOperationAssignment_3; }
		
		//ConditionLogicalOperation
		public RuleCall getLogicalOperationConditionLogicalOperationEnumRuleCall_3_0() { return cLogicalOperationConditionLogicalOperationEnumRuleCall_3_0; }
		
		//(right=FilterCondition)?
		public Assignment getRightAssignment_4() { return cRightAssignment_4; }
		
		//FilterCondition
		public RuleCall getRightFilterConditionParserRuleCall_4_0() { return cRightFilterConditionParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ElementFilterConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "structurizr.expressions.StructurizrExpressions.ElementFilterCondition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cElementTagConditionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cElementTechnologyConditionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cElementTypeConditionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cElementPropertyConditionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cElementParentConditionParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//ElementFilterCondition returns ElementFilterCondition:
		//    ElementTagCondition | ElementTechnologyCondition | ElementTypeCondition | ElementPropertyCondition | ElementParentCondition;
		@Override public ParserRule getRule() { return rule; }
		
		//ElementTagCondition | ElementTechnologyCondition | ElementTypeCondition | ElementPropertyCondition | ElementParentCondition
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ElementTagCondition
		public RuleCall getElementTagConditionParserRuleCall_0() { return cElementTagConditionParserRuleCall_0; }
		
		//ElementTechnologyCondition
		public RuleCall getElementTechnologyConditionParserRuleCall_1() { return cElementTechnologyConditionParserRuleCall_1; }
		
		//ElementTypeCondition
		public RuleCall getElementTypeConditionParserRuleCall_2() { return cElementTypeConditionParserRuleCall_2; }
		
		//ElementPropertyCondition
		public RuleCall getElementPropertyConditionParserRuleCall_3() { return cElementPropertyConditionParserRuleCall_3; }
		
		//ElementParentCondition
		public RuleCall getElementParentConditionParserRuleCall_4() { return cElementParentConditionParserRuleCall_4; }
	}
	public class RelationshipFilterConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "structurizr.expressions.StructurizrExpressions.RelationshipFilterCondition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRelationshipTagConditionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRelationshipPropertyConditionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRelationshipSourceConditionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cRelationshipDestinationConditionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//RelationshipFilterCondition returns RelationshipFilterCondition:
		//    RelationshipTagCondition | RelationshipPropertyCondition | RelationshipSourceCondition | RelationshipDestinationCondition;
		@Override public ParserRule getRule() { return rule; }
		
		//RelationshipTagCondition | RelationshipPropertyCondition | RelationshipSourceCondition | RelationshipDestinationCondition
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//RelationshipTagCondition
		public RuleCall getRelationshipTagConditionParserRuleCall_0() { return cRelationshipTagConditionParserRuleCall_0; }
		
		//RelationshipPropertyCondition
		public RuleCall getRelationshipPropertyConditionParserRuleCall_1() { return cRelationshipPropertyConditionParserRuleCall_1; }
		
		//RelationshipSourceCondition
		public RuleCall getRelationshipSourceConditionParserRuleCall_2() { return cRelationshipSourceConditionParserRuleCall_2; }
		
		//RelationshipDestinationCondition
		public RuleCall getRelationshipDestinationConditionParserRuleCall_3() { return cRelationshipDestinationConditionParserRuleCall_3; }
	}
	public class ElementTagConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "structurizr.expressions.StructurizrExpressions.ElementTagCondition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cElementTagConditionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cElementKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cFullStopKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cTagKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cComparisonOperationAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cComparisonOperationConditionComparisonOperationEnumRuleCall_5_0 = (RuleCall)cComparisonOperationAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cTagsAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final CrossReference cTagsTagCrossReference_6_0_0 = (CrossReference)cTagsAssignment_6_0.eContents().get(0);
		private final RuleCall cTagsTagIDTerminalRuleCall_6_0_0_1 = (RuleCall)cTagsTagCrossReference_6_0_0.eContents().get(1);
		private final Group cGroup_6_1 = (Group)cGroup_6.eContents().get(1);
		private final Keyword cCommaKeyword_6_1_0 = (Keyword)cGroup_6_1.eContents().get(0);
		private final Assignment cTagsAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final CrossReference cTagsTagCrossReference_6_1_1_0 = (CrossReference)cTagsAssignment_6_1_1.eContents().get(0);
		private final RuleCall cTagsTagIDTerminalRuleCall_6_1_1_0_1 = (RuleCall)cTagsTagCrossReference_6_1_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//ElementTagCondition returns ElementTagCondition:
		//    {ElementTagCondition}
		//    '(' 'element' '.' 'tag' comparisonOperation=ConditionComparisonOperation (tags+=[Tag] (',' tags+=[Tag])*)? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//{ElementTagCondition}
		//'(' 'element' '.' 'tag' comparisonOperation=ConditionComparisonOperation (tags+=[Tag] (',' tags+=[Tag])*)? ')'
		public Group getGroup() { return cGroup; }
		
		//{ElementTagCondition}
		public Action getElementTagConditionAction_0() { return cElementTagConditionAction_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//'element'
		public Keyword getElementKeyword_2() { return cElementKeyword_2; }
		
		//'.'
		public Keyword getFullStopKeyword_3() { return cFullStopKeyword_3; }
		
		//'tag'
		public Keyword getTagKeyword_4() { return cTagKeyword_4; }
		
		//comparisonOperation=ConditionComparisonOperation
		public Assignment getComparisonOperationAssignment_5() { return cComparisonOperationAssignment_5; }
		
		//ConditionComparisonOperation
		public RuleCall getComparisonOperationConditionComparisonOperationEnumRuleCall_5_0() { return cComparisonOperationConditionComparisonOperationEnumRuleCall_5_0; }
		
		//(tags+=[Tag] (',' tags+=[Tag])*)?
		public Group getGroup_6() { return cGroup_6; }
		
		//tags+=[Tag]
		public Assignment getTagsAssignment_6_0() { return cTagsAssignment_6_0; }
		
		//[Tag]
		public CrossReference getTagsTagCrossReference_6_0_0() { return cTagsTagCrossReference_6_0_0; }
		
		//ID
		public RuleCall getTagsTagIDTerminalRuleCall_6_0_0_1() { return cTagsTagIDTerminalRuleCall_6_0_0_1; }
		
		//(',' tags+=[Tag])*
		public Group getGroup_6_1() { return cGroup_6_1; }
		
		//','
		public Keyword getCommaKeyword_6_1_0() { return cCommaKeyword_6_1_0; }
		
		//tags+=[Tag]
		public Assignment getTagsAssignment_6_1_1() { return cTagsAssignment_6_1_1; }
		
		//[Tag]
		public CrossReference getTagsTagCrossReference_6_1_1_0() { return cTagsTagCrossReference_6_1_1_0; }
		
		//ID
		public RuleCall getTagsTagIDTerminalRuleCall_6_1_1_0_1() { return cTagsTagIDTerminalRuleCall_6_1_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
	}
	public class ElementTechnologyConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "structurizr.expressions.StructurizrExpressions.ElementTechnologyCondition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cElementTechnologyConditionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cElementKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cFullStopKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cTechnologyKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cComparisonOperationAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cComparisonOperationConditionComparisonOperationEnumRuleCall_5_0 = (RuleCall)cComparisonOperationAssignment_5.eContents().get(0);
		private final Assignment cTechnologyAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cTechnologyTechnologyCrossReference_6_0 = (CrossReference)cTechnologyAssignment_6.eContents().get(0);
		private final RuleCall cTechnologyTechnologyIDTerminalRuleCall_6_0_1 = (RuleCall)cTechnologyTechnologyCrossReference_6_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//ElementTechnologyCondition returns ElementTechnologyCondition:
		//    {ElementTechnologyCondition}
		//    '(' 'element' '.' 'technology' comparisonOperation=ConditionComparisonOperation (technology=[Technology])? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//{ElementTechnologyCondition}
		//'(' 'element' '.' 'technology' comparisonOperation=ConditionComparisonOperation (technology=[Technology])? ')'
		public Group getGroup() { return cGroup; }
		
		//{ElementTechnologyCondition}
		public Action getElementTechnologyConditionAction_0() { return cElementTechnologyConditionAction_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//'element'
		public Keyword getElementKeyword_2() { return cElementKeyword_2; }
		
		//'.'
		public Keyword getFullStopKeyword_3() { return cFullStopKeyword_3; }
		
		//'technology'
		public Keyword getTechnologyKeyword_4() { return cTechnologyKeyword_4; }
		
		//comparisonOperation=ConditionComparisonOperation
		public Assignment getComparisonOperationAssignment_5() { return cComparisonOperationAssignment_5; }
		
		//ConditionComparisonOperation
		public RuleCall getComparisonOperationConditionComparisonOperationEnumRuleCall_5_0() { return cComparisonOperationConditionComparisonOperationEnumRuleCall_5_0; }
		
		//(technology=[Technology])?
		public Assignment getTechnologyAssignment_6() { return cTechnologyAssignment_6; }
		
		//[Technology]
		public CrossReference getTechnologyTechnologyCrossReference_6_0() { return cTechnologyTechnologyCrossReference_6_0; }
		
		//ID
		public RuleCall getTechnologyTechnologyIDTerminalRuleCall_6_0_1() { return cTechnologyTechnologyIDTerminalRuleCall_6_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
	}
	public class ElementTypeConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "structurizr.expressions.StructurizrExpressions.ElementTypeCondition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cElementTypeConditionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cElementKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cFullStopKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cTypeKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cComparisonOperationAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cComparisonOperationConditionComparisonOperationEnumRuleCall_5_0 = (RuleCall)cComparisonOperationAssignment_5.eContents().get(0);
		private final Assignment cTypeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTypeFilterTypeEnumRuleCall_6_0 = (RuleCall)cTypeAssignment_6.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//ElementTypeCondition returns ElementTypeCondition:
		//    {ElementTypeCondition}
		//    '(' 'element' '.' 'type' comparisonOperation=ConditionComparisonOperation (type=FilterType)? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//{ElementTypeCondition}
		//'(' 'element' '.' 'type' comparisonOperation=ConditionComparisonOperation (type=FilterType)? ')'
		public Group getGroup() { return cGroup; }
		
		//{ElementTypeCondition}
		public Action getElementTypeConditionAction_0() { return cElementTypeConditionAction_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//'element'
		public Keyword getElementKeyword_2() { return cElementKeyword_2; }
		
		//'.'
		public Keyword getFullStopKeyword_3() { return cFullStopKeyword_3; }
		
		//'type'
		public Keyword getTypeKeyword_4() { return cTypeKeyword_4; }
		
		//comparisonOperation=ConditionComparisonOperation
		public Assignment getComparisonOperationAssignment_5() { return cComparisonOperationAssignment_5; }
		
		//ConditionComparisonOperation
		public RuleCall getComparisonOperationConditionComparisonOperationEnumRuleCall_5_0() { return cComparisonOperationConditionComparisonOperationEnumRuleCall_5_0; }
		
		//(type=FilterType)?
		public Assignment getTypeAssignment_6() { return cTypeAssignment_6; }
		
		//FilterType
		public RuleCall getTypeFilterTypeEnumRuleCall_6_0() { return cTypeFilterTypeEnumRuleCall_6_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
	}
	public class ElementPropertyConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "structurizr.expressions.StructurizrExpressions.ElementPropertyCondition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cElementPropertyConditionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cElementKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cFullStopKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cPropertiesKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cPropertyAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cPropertyPropertyCrossReference_6_0 = (CrossReference)cPropertyAssignment_6.eContents().get(0);
		private final RuleCall cPropertyPropertyIDTerminalRuleCall_6_0_1 = (RuleCall)cPropertyPropertyCrossReference_6_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cComparisonOperationAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cComparisonOperationConditionComparisonOperationEnumRuleCall_8_0 = (RuleCall)cComparisonOperationAssignment_8.eContents().get(0);
		private final Assignment cValueAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cValueEStringParserRuleCall_9_0 = (RuleCall)cValueAssignment_9.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//ElementPropertyCondition returns ElementPropertyCondition:
		//    {ElementPropertyCondition}
		//    '(' 'element' '.' 'properties' '[' (property=[Property])? ']' comparisonOperation=ConditionComparisonOperation (value=EString)? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//{ElementPropertyCondition}
		//'(' 'element' '.' 'properties' '[' (property=[Property])? ']' comparisonOperation=ConditionComparisonOperation (value=EString)? ')'
		public Group getGroup() { return cGroup; }
		
		//{ElementPropertyCondition}
		public Action getElementPropertyConditionAction_0() { return cElementPropertyConditionAction_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//'element'
		public Keyword getElementKeyword_2() { return cElementKeyword_2; }
		
		//'.'
		public Keyword getFullStopKeyword_3() { return cFullStopKeyword_3; }
		
		//'properties'
		public Keyword getPropertiesKeyword_4() { return cPropertiesKeyword_4; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_5() { return cLeftSquareBracketKeyword_5; }
		
		//(property=[Property])?
		public Assignment getPropertyAssignment_6() { return cPropertyAssignment_6; }
		
		//[Property]
		public CrossReference getPropertyPropertyCrossReference_6_0() { return cPropertyPropertyCrossReference_6_0; }
		
		//ID
		public RuleCall getPropertyPropertyIDTerminalRuleCall_6_0_1() { return cPropertyPropertyIDTerminalRuleCall_6_0_1; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_7() { return cRightSquareBracketKeyword_7; }
		
		//comparisonOperation=ConditionComparisonOperation
		public Assignment getComparisonOperationAssignment_8() { return cComparisonOperationAssignment_8; }
		
		//ConditionComparisonOperation
		public RuleCall getComparisonOperationConditionComparisonOperationEnumRuleCall_8_0() { return cComparisonOperationConditionComparisonOperationEnumRuleCall_8_0; }
		
		//(value=EString)?
		public Assignment getValueAssignment_9() { return cValueAssignment_9; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_9_0() { return cValueEStringParserRuleCall_9_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_10() { return cRightParenthesisKeyword_10; }
	}
	public class ElementParentConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "structurizr.expressions.StructurizrExpressions.ElementParentCondition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cElementParentConditionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cElementKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cFullStopKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cParentKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cComparisonOperationAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cComparisonOperationConditionComparisonOperationEnumRuleCall_5_0 = (RuleCall)cComparisonOperationAssignment_5.eContents().get(0);
		private final Assignment cParentAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cParentIdentifiableElementCrossReference_6_0 = (CrossReference)cParentAssignment_6.eContents().get(0);
		private final RuleCall cParentIdentifiableElementIDTerminalRuleCall_6_0_1 = (RuleCall)cParentIdentifiableElementCrossReference_6_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//ElementParentCondition returns ElementParentCondition:
		//    {ElementParentCondition}
		//    '(' 'element' '.' 'parent' comparisonOperation=ConditionComparisonOperation (parent=[IdentifiableElement])? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//{ElementParentCondition}
		//'(' 'element' '.' 'parent' comparisonOperation=ConditionComparisonOperation (parent=[IdentifiableElement])? ')'
		public Group getGroup() { return cGroup; }
		
		//{ElementParentCondition}
		public Action getElementParentConditionAction_0() { return cElementParentConditionAction_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//'element'
		public Keyword getElementKeyword_2() { return cElementKeyword_2; }
		
		//'.'
		public Keyword getFullStopKeyword_3() { return cFullStopKeyword_3; }
		
		//'parent'
		public Keyword getParentKeyword_4() { return cParentKeyword_4; }
		
		//comparisonOperation=ConditionComparisonOperation
		public Assignment getComparisonOperationAssignment_5() { return cComparisonOperationAssignment_5; }
		
		//ConditionComparisonOperation
		public RuleCall getComparisonOperationConditionComparisonOperationEnumRuleCall_5_0() { return cComparisonOperationConditionComparisonOperationEnumRuleCall_5_0; }
		
		//(parent=[IdentifiableElement])?
		public Assignment getParentAssignment_6() { return cParentAssignment_6; }
		
		//[IdentifiableElement]
		public CrossReference getParentIdentifiableElementCrossReference_6_0() { return cParentIdentifiableElementCrossReference_6_0; }
		
		//ID
		public RuleCall getParentIdentifiableElementIDTerminalRuleCall_6_0_1() { return cParentIdentifiableElementIDTerminalRuleCall_6_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
	}
	public class RelationshipTagConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "structurizr.expressions.StructurizrExpressions.RelationshipTagCondition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRelationshipTagConditionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cRelationshipKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cFullStopKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cTagKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cComparisonOperationAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cComparisonOperationConditionComparisonOperationEnumRuleCall_5_0 = (RuleCall)cComparisonOperationAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cTagsAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final CrossReference cTagsTagCrossReference_6_0_0 = (CrossReference)cTagsAssignment_6_0.eContents().get(0);
		private final RuleCall cTagsTagIDTerminalRuleCall_6_0_0_1 = (RuleCall)cTagsTagCrossReference_6_0_0.eContents().get(1);
		private final Group cGroup_6_1 = (Group)cGroup_6.eContents().get(1);
		private final Keyword cCommaKeyword_6_1_0 = (Keyword)cGroup_6_1.eContents().get(0);
		private final Assignment cTagsAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final CrossReference cTagsTagCrossReference_6_1_1_0 = (CrossReference)cTagsAssignment_6_1_1.eContents().get(0);
		private final RuleCall cTagsTagIDTerminalRuleCall_6_1_1_0_1 = (RuleCall)cTagsTagCrossReference_6_1_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//RelationshipTagCondition returns RelationshipTagCondition:
		//    {RelationshipTagCondition}
		//    '(' 'relationship' '.' 'tag' comparisonOperation=ConditionComparisonOperation (tags+=[Tag] (',' tags+=[Tag])*)? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//{RelationshipTagCondition}
		//'(' 'relationship' '.' 'tag' comparisonOperation=ConditionComparisonOperation (tags+=[Tag] (',' tags+=[Tag])*)? ')'
		public Group getGroup() { return cGroup; }
		
		//{RelationshipTagCondition}
		public Action getRelationshipTagConditionAction_0() { return cRelationshipTagConditionAction_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//'relationship'
		public Keyword getRelationshipKeyword_2() { return cRelationshipKeyword_2; }
		
		//'.'
		public Keyword getFullStopKeyword_3() { return cFullStopKeyword_3; }
		
		//'tag'
		public Keyword getTagKeyword_4() { return cTagKeyword_4; }
		
		//comparisonOperation=ConditionComparisonOperation
		public Assignment getComparisonOperationAssignment_5() { return cComparisonOperationAssignment_5; }
		
		//ConditionComparisonOperation
		public RuleCall getComparisonOperationConditionComparisonOperationEnumRuleCall_5_0() { return cComparisonOperationConditionComparisonOperationEnumRuleCall_5_0; }
		
		//(tags+=[Tag] (',' tags+=[Tag])*)?
		public Group getGroup_6() { return cGroup_6; }
		
		//tags+=[Tag]
		public Assignment getTagsAssignment_6_0() { return cTagsAssignment_6_0; }
		
		//[Tag]
		public CrossReference getTagsTagCrossReference_6_0_0() { return cTagsTagCrossReference_6_0_0; }
		
		//ID
		public RuleCall getTagsTagIDTerminalRuleCall_6_0_0_1() { return cTagsTagIDTerminalRuleCall_6_0_0_1; }
		
		//(',' tags+=[Tag])*
		public Group getGroup_6_1() { return cGroup_6_1; }
		
		//','
		public Keyword getCommaKeyword_6_1_0() { return cCommaKeyword_6_1_0; }
		
		//tags+=[Tag]
		public Assignment getTagsAssignment_6_1_1() { return cTagsAssignment_6_1_1; }
		
		//[Tag]
		public CrossReference getTagsTagCrossReference_6_1_1_0() { return cTagsTagCrossReference_6_1_1_0; }
		
		//ID
		public RuleCall getTagsTagIDTerminalRuleCall_6_1_1_0_1() { return cTagsTagIDTerminalRuleCall_6_1_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
	}
	public class RelationshipPropertyConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "structurizr.expressions.StructurizrExpressions.RelationshipPropertyCondition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRelationshipPropertyConditionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cRelationshipKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cFullStopKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cPropertiesKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cPropertyAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cPropertyPropertyCrossReference_6_0 = (CrossReference)cPropertyAssignment_6.eContents().get(0);
		private final RuleCall cPropertyPropertyIDTerminalRuleCall_6_0_1 = (RuleCall)cPropertyPropertyCrossReference_6_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cComparisonOperationAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cComparisonOperationConditionComparisonOperationEnumRuleCall_8_0 = (RuleCall)cComparisonOperationAssignment_8.eContents().get(0);
		private final Assignment cValueAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cValueEStringParserRuleCall_9_0 = (RuleCall)cValueAssignment_9.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//RelationshipPropertyCondition returns RelationshipPropertyCondition:
		//    {RelationshipPropertyCondition}
		//    '(' 'relationship' '.' 'properties' '[' (property=[Property])? ']' comparisonOperation=ConditionComparisonOperation (value=EString)? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//{RelationshipPropertyCondition}
		//'(' 'relationship' '.' 'properties' '[' (property=[Property])? ']' comparisonOperation=ConditionComparisonOperation (value=EString)? ')'
		public Group getGroup() { return cGroup; }
		
		//{RelationshipPropertyCondition}
		public Action getRelationshipPropertyConditionAction_0() { return cRelationshipPropertyConditionAction_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//'relationship'
		public Keyword getRelationshipKeyword_2() { return cRelationshipKeyword_2; }
		
		//'.'
		public Keyword getFullStopKeyword_3() { return cFullStopKeyword_3; }
		
		//'properties'
		public Keyword getPropertiesKeyword_4() { return cPropertiesKeyword_4; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_5() { return cLeftSquareBracketKeyword_5; }
		
		//(property=[Property])?
		public Assignment getPropertyAssignment_6() { return cPropertyAssignment_6; }
		
		//[Property]
		public CrossReference getPropertyPropertyCrossReference_6_0() { return cPropertyPropertyCrossReference_6_0; }
		
		//ID
		public RuleCall getPropertyPropertyIDTerminalRuleCall_6_0_1() { return cPropertyPropertyIDTerminalRuleCall_6_0_1; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_7() { return cRightSquareBracketKeyword_7; }
		
		//comparisonOperation=ConditionComparisonOperation
		public Assignment getComparisonOperationAssignment_8() { return cComparisonOperationAssignment_8; }
		
		//ConditionComparisonOperation
		public RuleCall getComparisonOperationConditionComparisonOperationEnumRuleCall_8_0() { return cComparisonOperationConditionComparisonOperationEnumRuleCall_8_0; }
		
		//(value=EString)?
		public Assignment getValueAssignment_9() { return cValueAssignment_9; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_9_0() { return cValueEStringParserRuleCall_9_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_10() { return cRightParenthesisKeyword_10; }
	}
	public class RelationshipSourceConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "structurizr.expressions.StructurizrExpressions.RelationshipSourceCondition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRelationshipSourceConditionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cRelationshipKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cFullStopKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cSourceKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cComparisonOperationAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cComparisonOperationConditionComparisonOperationEnumRuleCall_5_0 = (RuleCall)cComparisonOperationAssignment_5.eContents().get(0);
		private final Assignment cSourceAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cSourceIdentifiableElementCrossReference_6_0 = (CrossReference)cSourceAssignment_6.eContents().get(0);
		private final RuleCall cSourceIdentifiableElementIDTerminalRuleCall_6_0_1 = (RuleCall)cSourceIdentifiableElementCrossReference_6_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//RelationshipSourceCondition returns RelationshipSourceCondition:
		//    {RelationshipSourceCondition}
		//    '(' 'relationship' '.' 'source' comparisonOperation=ConditionComparisonOperation (source=[IdentifiableElement])? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//{RelationshipSourceCondition}
		//'(' 'relationship' '.' 'source' comparisonOperation=ConditionComparisonOperation (source=[IdentifiableElement])? ')'
		public Group getGroup() { return cGroup; }
		
		//{RelationshipSourceCondition}
		public Action getRelationshipSourceConditionAction_0() { return cRelationshipSourceConditionAction_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//'relationship'
		public Keyword getRelationshipKeyword_2() { return cRelationshipKeyword_2; }
		
		//'.'
		public Keyword getFullStopKeyword_3() { return cFullStopKeyword_3; }
		
		//'source'
		public Keyword getSourceKeyword_4() { return cSourceKeyword_4; }
		
		//comparisonOperation=ConditionComparisonOperation
		public Assignment getComparisonOperationAssignment_5() { return cComparisonOperationAssignment_5; }
		
		//ConditionComparisonOperation
		public RuleCall getComparisonOperationConditionComparisonOperationEnumRuleCall_5_0() { return cComparisonOperationConditionComparisonOperationEnumRuleCall_5_0; }
		
		//(source=[IdentifiableElement])?
		public Assignment getSourceAssignment_6() { return cSourceAssignment_6; }
		
		//[IdentifiableElement]
		public CrossReference getSourceIdentifiableElementCrossReference_6_0() { return cSourceIdentifiableElementCrossReference_6_0; }
		
		//ID
		public RuleCall getSourceIdentifiableElementIDTerminalRuleCall_6_0_1() { return cSourceIdentifiableElementIDTerminalRuleCall_6_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
	}
	public class RelationshipDestinationConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "structurizr.expressions.StructurizrExpressions.RelationshipDestinationCondition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRelationshipDestinationConditionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cRelationshipKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cFullStopKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cDestinationKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cComparisonOperationAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cComparisonOperationConditionComparisonOperationEnumRuleCall_5_0 = (RuleCall)cComparisonOperationAssignment_5.eContents().get(0);
		private final Assignment cDestinationAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cDestinationIdentifiableElementCrossReference_6_0 = (CrossReference)cDestinationAssignment_6.eContents().get(0);
		private final RuleCall cDestinationIdentifiableElementIDTerminalRuleCall_6_0_1 = (RuleCall)cDestinationIdentifiableElementCrossReference_6_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//RelationshipDestinationCondition returns RelationshipDestinationCondition:
		//    {RelationshipDestinationCondition}
		//    '(' 'relationship' '.' 'destination' comparisonOperation=ConditionComparisonOperation (destination=[IdentifiableElement])? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//{RelationshipDestinationCondition}
		//'(' 'relationship' '.' 'destination' comparisonOperation=ConditionComparisonOperation (destination=[IdentifiableElement])? ')'
		public Group getGroup() { return cGroup; }
		
		//{RelationshipDestinationCondition}
		public Action getRelationshipDestinationConditionAction_0() { return cRelationshipDestinationConditionAction_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//'relationship'
		public Keyword getRelationshipKeyword_2() { return cRelationshipKeyword_2; }
		
		//'.'
		public Keyword getFullStopKeyword_3() { return cFullStopKeyword_3; }
		
		//'destination'
		public Keyword getDestinationKeyword_4() { return cDestinationKeyword_4; }
		
		//comparisonOperation=ConditionComparisonOperation
		public Assignment getComparisonOperationAssignment_5() { return cComparisonOperationAssignment_5; }
		
		//ConditionComparisonOperation
		public RuleCall getComparisonOperationConditionComparisonOperationEnumRuleCall_5_0() { return cComparisonOperationConditionComparisonOperationEnumRuleCall_5_0; }
		
		//(destination=[IdentifiableElement])?
		public Assignment getDestinationAssignment_6() { return cDestinationAssignment_6; }
		
		//[IdentifiableElement]
		public CrossReference getDestinationIdentifiableElementCrossReference_6_0() { return cDestinationIdentifiableElementCrossReference_6_0; }
		
		//ID
		public RuleCall getDestinationIdentifiableElementIDTerminalRuleCall_6_0_1() { return cDestinationIdentifiableElementIDTerminalRuleCall_6_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "structurizr.expressions.StructurizrExpressions.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	
	public class ConditionLogicalOperationElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "structurizr.expressions.StructurizrExpressions.ConditionLogicalOperation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cANDEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cANDAmpersandAmpersandKeyword_0_0 = (Keyword)cANDEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOREnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cORVerticalLineVerticalLineKeyword_1_0 = (Keyword)cOREnumLiteralDeclaration_1.eContents().get(0);
		
		//enum ConditionLogicalOperation returns ConditionLogicalOperation:
		//                AND = '&&' | OR = '||';
		public EnumRule getRule() { return rule; }
		
		//AND = '&&' | OR = '||'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//AND = '&&'
		public EnumLiteralDeclaration getANDEnumLiteralDeclaration_0() { return cANDEnumLiteralDeclaration_0; }
		
		//'&&'
		public Keyword getANDAmpersandAmpersandKeyword_0_0() { return cANDAmpersandAmpersandKeyword_0_0; }
		
		//OR = '||'
		public EnumLiteralDeclaration getOREnumLiteralDeclaration_1() { return cOREnumLiteralDeclaration_1; }
		
		//'||'
		public Keyword getORVerticalLineVerticalLineKeyword_1_0() { return cORVerticalLineVerticalLineKeyword_1_0; }
	}
	public class ConditionComparisonOperationElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "structurizr.expressions.StructurizrExpressions.ConditionComparisonOperation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cEQUALSEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cEQUALSEqualsSignEqualsSignKeyword_0_0 = (Keyword)cEQUALSEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cNOT_EQUALSEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cNOT_EQUALSExclamationMarkEqualsSignKeyword_1_0 = (Keyword)cNOT_EQUALSEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum ConditionComparisonOperation returns ConditionComparisonOperation:
		//                EQUALS = '==' | NOT_EQUALS = '!=';
		public EnumRule getRule() { return rule; }
		
		//EQUALS = '==' | NOT_EQUALS = '!='
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//EQUALS = '=='
		public EnumLiteralDeclaration getEQUALSEnumLiteralDeclaration_0() { return cEQUALSEnumLiteralDeclaration_0; }
		
		//'=='
		public Keyword getEQUALSEqualsSignEqualsSignKeyword_0_0() { return cEQUALSEqualsSignEqualsSignKeyword_0_0; }
		
		//NOT_EQUALS = '!='
		public EnumLiteralDeclaration getNOT_EQUALSEnumLiteralDeclaration_1() { return cNOT_EQUALSEnumLiteralDeclaration_1; }
		
		//'!='
		public Keyword getNOT_EQUALSExclamationMarkEqualsSignKeyword_1_0() { return cNOT_EQUALSExclamationMarkEqualsSignKeyword_1_0; }
	}
	public class FilterTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "structurizr.expressions.StructurizrExpressions.FilterType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPersonEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPersonPersonKeyword_0_0 = (Keyword)cPersonEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSoftwareSystemEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSoftwareSystemSoftwareSystemKeyword_1_0 = (Keyword)cSoftwareSystemEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cContainerEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cContainerContainerKeyword_2_0 = (Keyword)cContainerEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cComponentEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cComponentComponentKeyword_3_0 = (Keyword)cComponentEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cDeploymentNodeEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cDeploymentNodeDeploymentNodeKeyword_4_0 = (Keyword)cDeploymentNodeEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum FilterType returns FilterType:
		//                Person = 'Person' | SoftwareSystem = 'SoftwareSystem' | Container = 'Container' | Component = 'Component' | DeploymentNode = 'DeploymentNode';
		public EnumRule getRule() { return rule; }
		
		//Person = 'Person' | SoftwareSystem = 'SoftwareSystem' | Container = 'Container' | Component = 'Component' | DeploymentNode = 'DeploymentNode'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Person = 'Person'
		public EnumLiteralDeclaration getPersonEnumLiteralDeclaration_0() { return cPersonEnumLiteralDeclaration_0; }
		
		//'Person'
		public Keyword getPersonPersonKeyword_0_0() { return cPersonPersonKeyword_0_0; }
		
		//SoftwareSystem = 'SoftwareSystem'
		public EnumLiteralDeclaration getSoftwareSystemEnumLiteralDeclaration_1() { return cSoftwareSystemEnumLiteralDeclaration_1; }
		
		//'SoftwareSystem'
		public Keyword getSoftwareSystemSoftwareSystemKeyword_1_0() { return cSoftwareSystemSoftwareSystemKeyword_1_0; }
		
		//Container = 'Container'
		public EnumLiteralDeclaration getContainerEnumLiteralDeclaration_2() { return cContainerEnumLiteralDeclaration_2; }
		
		//'Container'
		public Keyword getContainerContainerKeyword_2_0() { return cContainerContainerKeyword_2_0; }
		
		//Component = 'Component'
		public EnumLiteralDeclaration getComponentEnumLiteralDeclaration_3() { return cComponentEnumLiteralDeclaration_3; }
		
		//'Component'
		public Keyword getComponentComponentKeyword_3_0() { return cComponentComponentKeyword_3_0; }
		
		//DeploymentNode = 'DeploymentNode'
		public EnumLiteralDeclaration getDeploymentNodeEnumLiteralDeclaration_4() { return cDeploymentNodeEnumLiteralDeclaration_4; }
		
		//'DeploymentNode'
		public Keyword getDeploymentNodeDeploymentNodeKeyword_4_0() { return cDeploymentNodeDeploymentNodeKeyword_4_0; }
	}
	
	private final EntryRuleElements pEntryRule;
	private final SystemLandscapeView_IncludeElements pSystemLandscapeView_Include;
	private final SystemLandscapeView_ExcludeElements pSystemLandscapeView_Exclude;
	private final SystemContextView_IncludeElements pSystemContextView_Include;
	private final SystemContextView_ExcludeElements pSystemContextView_Exclude;
	private final ContainerView_IncludeElements pContainerView_Include;
	private final ContainerView_ExcludeElements pContainerView_Exclude;
	private final ComponentView_IncludeElements pComponentView_Include;
	private final ComponentView_ExcludeElements pComponentView_Exclude;
	private final ConditionElementElements pConditionElement;
	private final NoFilterConditionElements pNoFilterCondition;
	private final FilterConditionElements pFilterCondition;
	private final CompositeConditionElements pCompositeCondition;
	private final ElementFilterConditionElements pElementFilterCondition;
	private final RelationshipFilterConditionElements pRelationshipFilterCondition;
	private final ElementTagConditionElements pElementTagCondition;
	private final ElementTechnologyConditionElements pElementTechnologyCondition;
	private final ElementTypeConditionElements pElementTypeCondition;
	private final ElementPropertyConditionElements pElementPropertyCondition;
	private final ElementParentConditionElements pElementParentCondition;
	private final RelationshipTagConditionElements pRelationshipTagCondition;
	private final RelationshipPropertyConditionElements pRelationshipPropertyCondition;
	private final RelationshipSourceConditionElements pRelationshipSourceCondition;
	private final RelationshipDestinationConditionElements pRelationshipDestinationCondition;
	private final ConditionLogicalOperationElements eConditionLogicalOperation;
	private final ConditionComparisonOperationElements eConditionComparisonOperation;
	private final FilterTypeElements eFilterType;
	private final EStringElements pEString;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public StructurizrExpressionsGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pEntryRule = new EntryRuleElements();
		this.pSystemLandscapeView_Include = new SystemLandscapeView_IncludeElements();
		this.pSystemLandscapeView_Exclude = new SystemLandscapeView_ExcludeElements();
		this.pSystemContextView_Include = new SystemContextView_IncludeElements();
		this.pSystemContextView_Exclude = new SystemContextView_ExcludeElements();
		this.pContainerView_Include = new ContainerView_IncludeElements();
		this.pContainerView_Exclude = new ContainerView_ExcludeElements();
		this.pComponentView_Include = new ComponentView_IncludeElements();
		this.pComponentView_Exclude = new ComponentView_ExcludeElements();
		this.pConditionElement = new ConditionElementElements();
		this.pNoFilterCondition = new NoFilterConditionElements();
		this.pFilterCondition = new FilterConditionElements();
		this.pCompositeCondition = new CompositeConditionElements();
		this.pElementFilterCondition = new ElementFilterConditionElements();
		this.pRelationshipFilterCondition = new RelationshipFilterConditionElements();
		this.pElementTagCondition = new ElementTagConditionElements();
		this.pElementTechnologyCondition = new ElementTechnologyConditionElements();
		this.pElementTypeCondition = new ElementTypeConditionElements();
		this.pElementPropertyCondition = new ElementPropertyConditionElements();
		this.pElementParentCondition = new ElementParentConditionElements();
		this.pRelationshipTagCondition = new RelationshipTagConditionElements();
		this.pRelationshipPropertyCondition = new RelationshipPropertyConditionElements();
		this.pRelationshipSourceCondition = new RelationshipSourceConditionElements();
		this.pRelationshipDestinationCondition = new RelationshipDestinationConditionElements();
		this.eConditionLogicalOperation = new ConditionLogicalOperationElements();
		this.eConditionComparisonOperation = new ConditionComparisonOperationElements();
		this.eFilterType = new FilterTypeElements();
		this.pEString = new EStringElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("structurizr.expressions.StructurizrExpressions".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//EntryRule returns ViewElement:
	//    SystemLandscapeView_Include | SystemLandscapeView_Exclude | SystemContextView_Include | SystemContextView_Exclude | ContainerView_Include | ContainerView_Exclude | ComponentView_Include | ComponentView_Exclude;
	public EntryRuleElements getEntryRuleAccess() {
		return pEntryRule;
	}
	
	public ParserRule getEntryRuleRule() {
		return getEntryRuleAccess().getRule();
	}
	
	//SystemLandscapeView_Include returns SystemLandscapeView:
	//    {SystemLandscapeView}
	//    (include=ConditionElement)?;
	public SystemLandscapeView_IncludeElements getSystemLandscapeView_IncludeAccess() {
		return pSystemLandscapeView_Include;
	}
	
	public ParserRule getSystemLandscapeView_IncludeRule() {
		return getSystemLandscapeView_IncludeAccess().getRule();
	}
	
	//SystemLandscapeView_Exclude returns SystemLandscapeView:
	//    {SystemLandscapeView}
	//    (exclude=ConditionElement)?;
	public SystemLandscapeView_ExcludeElements getSystemLandscapeView_ExcludeAccess() {
		return pSystemLandscapeView_Exclude;
	}
	
	public ParserRule getSystemLandscapeView_ExcludeRule() {
		return getSystemLandscapeView_ExcludeAccess().getRule();
	}
	
	//SystemContextView_Include returns SystemContextView:
	//    {SystemContextView}
	//    (include=ConditionElement)?;
	public SystemContextView_IncludeElements getSystemContextView_IncludeAccess() {
		return pSystemContextView_Include;
	}
	
	public ParserRule getSystemContextView_IncludeRule() {
		return getSystemContextView_IncludeAccess().getRule();
	}
	
	//SystemContextView_Exclude returns SystemContextView:
	//    {SystemContextView}
	//    (exclude=ConditionElement)?;
	public SystemContextView_ExcludeElements getSystemContextView_ExcludeAccess() {
		return pSystemContextView_Exclude;
	}
	
	public ParserRule getSystemContextView_ExcludeRule() {
		return getSystemContextView_ExcludeAccess().getRule();
	}
	
	//ContainerView_Include returns ContainerView:
	//    {ContainerView}
	//    (include=ConditionElement)?;
	public ContainerView_IncludeElements getContainerView_IncludeAccess() {
		return pContainerView_Include;
	}
	
	public ParserRule getContainerView_IncludeRule() {
		return getContainerView_IncludeAccess().getRule();
	}
	
	//ContainerView_Exclude returns ContainerView:
	//    {ContainerView}
	//    (exclude=ConditionElement)?;
	public ContainerView_ExcludeElements getContainerView_ExcludeAccess() {
		return pContainerView_Exclude;
	}
	
	public ParserRule getContainerView_ExcludeRule() {
		return getContainerView_ExcludeAccess().getRule();
	}
	
	//ComponentView_Include returns ComponentView:
	//    {ComponentView}
	//    (include=ConditionElement)?;
	public ComponentView_IncludeElements getComponentView_IncludeAccess() {
		return pComponentView_Include;
	}
	
	public ParserRule getComponentView_IncludeRule() {
		return getComponentView_IncludeAccess().getRule();
	}
	
	//ComponentView_Exclude returns ComponentView:
	//    {ComponentView}
	//    (exclude=ConditionElement)?;
	public ComponentView_ExcludeElements getComponentView_ExcludeAccess() {
		return pComponentView_Exclude;
	}
	
	public ParserRule getComponentView_ExcludeRule() {
		return getComponentView_ExcludeAccess().getRule();
	}
	
	//ConditionElement returns ConditionElement:
	//    NoFilterCondition | FilterCondition;
	public ConditionElementElements getConditionElementAccess() {
		return pConditionElement;
	}
	
	public ParserRule getConditionElementRule() {
		return getConditionElementAccess().getRule();
	}
	
	//NoFilterCondition returns NoFilterCondition:
	//    {NoFilterCondition}
	//    '*';
	public NoFilterConditionElements getNoFilterConditionAccess() {
		return pNoFilterCondition;
	}
	
	public ParserRule getNoFilterConditionRule() {
		return getNoFilterConditionAccess().getRule();
	}
	
	//FilterCondition returns FilterCondition:
	//    CompositeCondition | ElementFilterCondition | RelationshipFilterCondition;
	public FilterConditionElements getFilterConditionAccess() {
		return pFilterCondition;
	}
	
	public ParserRule getFilterConditionRule() {
		return getFilterConditionAccess().getRule();
	}
	
	//CompositeCondition returns CompositeCondition:
	//    {CompositeCondition}
	//    '{' (left=FilterCondition)? logicalOperation=ConditionLogicalOperation (right=FilterCondition)? '}';
	public CompositeConditionElements getCompositeConditionAccess() {
		return pCompositeCondition;
	}
	
	public ParserRule getCompositeConditionRule() {
		return getCompositeConditionAccess().getRule();
	}
	
	//ElementFilterCondition returns ElementFilterCondition:
	//    ElementTagCondition | ElementTechnologyCondition | ElementTypeCondition | ElementPropertyCondition | ElementParentCondition;
	public ElementFilterConditionElements getElementFilterConditionAccess() {
		return pElementFilterCondition;
	}
	
	public ParserRule getElementFilterConditionRule() {
		return getElementFilterConditionAccess().getRule();
	}
	
	//RelationshipFilterCondition returns RelationshipFilterCondition:
	//    RelationshipTagCondition | RelationshipPropertyCondition | RelationshipSourceCondition | RelationshipDestinationCondition;
	public RelationshipFilterConditionElements getRelationshipFilterConditionAccess() {
		return pRelationshipFilterCondition;
	}
	
	public ParserRule getRelationshipFilterConditionRule() {
		return getRelationshipFilterConditionAccess().getRule();
	}
	
	//ElementTagCondition returns ElementTagCondition:
	//    {ElementTagCondition}
	//    '(' 'element' '.' 'tag' comparisonOperation=ConditionComparisonOperation (tags+=[Tag] (',' tags+=[Tag])*)? ')';
	public ElementTagConditionElements getElementTagConditionAccess() {
		return pElementTagCondition;
	}
	
	public ParserRule getElementTagConditionRule() {
		return getElementTagConditionAccess().getRule();
	}
	
	//ElementTechnologyCondition returns ElementTechnologyCondition:
	//    {ElementTechnologyCondition}
	//    '(' 'element' '.' 'technology' comparisonOperation=ConditionComparisonOperation (technology=[Technology])? ')';
	public ElementTechnologyConditionElements getElementTechnologyConditionAccess() {
		return pElementTechnologyCondition;
	}
	
	public ParserRule getElementTechnologyConditionRule() {
		return getElementTechnologyConditionAccess().getRule();
	}
	
	//ElementTypeCondition returns ElementTypeCondition:
	//    {ElementTypeCondition}
	//    '(' 'element' '.' 'type' comparisonOperation=ConditionComparisonOperation (type=FilterType)? ')';
	public ElementTypeConditionElements getElementTypeConditionAccess() {
		return pElementTypeCondition;
	}
	
	public ParserRule getElementTypeConditionRule() {
		return getElementTypeConditionAccess().getRule();
	}
	
	//ElementPropertyCondition returns ElementPropertyCondition:
	//    {ElementPropertyCondition}
	//    '(' 'element' '.' 'properties' '[' (property=[Property])? ']' comparisonOperation=ConditionComparisonOperation (value=EString)? ')';
	public ElementPropertyConditionElements getElementPropertyConditionAccess() {
		return pElementPropertyCondition;
	}
	
	public ParserRule getElementPropertyConditionRule() {
		return getElementPropertyConditionAccess().getRule();
	}
	
	//ElementParentCondition returns ElementParentCondition:
	//    {ElementParentCondition}
	//    '(' 'element' '.' 'parent' comparisonOperation=ConditionComparisonOperation (parent=[IdentifiableElement])? ')';
	public ElementParentConditionElements getElementParentConditionAccess() {
		return pElementParentCondition;
	}
	
	public ParserRule getElementParentConditionRule() {
		return getElementParentConditionAccess().getRule();
	}
	
	//RelationshipTagCondition returns RelationshipTagCondition:
	//    {RelationshipTagCondition}
	//    '(' 'relationship' '.' 'tag' comparisonOperation=ConditionComparisonOperation (tags+=[Tag] (',' tags+=[Tag])*)? ')';
	public RelationshipTagConditionElements getRelationshipTagConditionAccess() {
		return pRelationshipTagCondition;
	}
	
	public ParserRule getRelationshipTagConditionRule() {
		return getRelationshipTagConditionAccess().getRule();
	}
	
	//RelationshipPropertyCondition returns RelationshipPropertyCondition:
	//    {RelationshipPropertyCondition}
	//    '(' 'relationship' '.' 'properties' '[' (property=[Property])? ']' comparisonOperation=ConditionComparisonOperation (value=EString)? ')';
	public RelationshipPropertyConditionElements getRelationshipPropertyConditionAccess() {
		return pRelationshipPropertyCondition;
	}
	
	public ParserRule getRelationshipPropertyConditionRule() {
		return getRelationshipPropertyConditionAccess().getRule();
	}
	
	//RelationshipSourceCondition returns RelationshipSourceCondition:
	//    {RelationshipSourceCondition}
	//    '(' 'relationship' '.' 'source' comparisonOperation=ConditionComparisonOperation (source=[IdentifiableElement])? ')';
	public RelationshipSourceConditionElements getRelationshipSourceConditionAccess() {
		return pRelationshipSourceCondition;
	}
	
	public ParserRule getRelationshipSourceConditionRule() {
		return getRelationshipSourceConditionAccess().getRule();
	}
	
	//RelationshipDestinationCondition returns RelationshipDestinationCondition:
	//    {RelationshipDestinationCondition}
	//    '(' 'relationship' '.' 'destination' comparisonOperation=ConditionComparisonOperation (destination=[IdentifiableElement])? ')';
	public RelationshipDestinationConditionElements getRelationshipDestinationConditionAccess() {
		return pRelationshipDestinationCondition;
	}
	
	public ParserRule getRelationshipDestinationConditionRule() {
		return getRelationshipDestinationConditionAccess().getRule();
	}
	
	//enum ConditionLogicalOperation returns ConditionLogicalOperation:
	//                AND = '&&' | OR = '||';
	public ConditionLogicalOperationElements getConditionLogicalOperationAccess() {
		return eConditionLogicalOperation;
	}
	
	public EnumRule getConditionLogicalOperationRule() {
		return getConditionLogicalOperationAccess().getRule();
	}
	
	//enum ConditionComparisonOperation returns ConditionComparisonOperation:
	//                EQUALS = '==' | NOT_EQUALS = '!=';
	public ConditionComparisonOperationElements getConditionComparisonOperationAccess() {
		return eConditionComparisonOperation;
	}
	
	public EnumRule getConditionComparisonOperationRule() {
		return getConditionComparisonOperationAccess().getRule();
	}
	
	//enum FilterType returns FilterType:
	//                Person = 'Person' | SoftwareSystem = 'SoftwareSystem' | Container = 'Container' | Component = 'Component' | DeploymentNode = 'DeploymentNode';
	public FilterTypeElements getFilterTypeAccess() {
		return eFilterType;
	}
	
	public EnumRule getFilterTypeRule() {
		return getFilterTypeAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
