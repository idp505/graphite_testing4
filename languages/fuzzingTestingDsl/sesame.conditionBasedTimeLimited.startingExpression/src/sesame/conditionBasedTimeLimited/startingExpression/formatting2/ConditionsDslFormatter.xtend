/*
 * generated by Xtext 2.30.0
 */
package sesame.conditionBasedTimeLimited.startingExpression.formatting2

import TestingPackage.FuzzingOperations.ConditionBasedTimeLimited
import TestingPackage.StandardGrammar.Condition
import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import sesame.conditionBasedTimeLimited.startingExpression.services.ConditionsDslGrammarAccess

class ConditionsDslFormatter extends AbstractFormatter2 {
	
	@Inject extension ConditionsDslGrammarAccess

	def dispatch void format(ConditionBasedTimeLimited conditionBasedTimeLimited, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		conditionBasedTimeLimited.starting.format
	}

	def dispatch void format(Condition condition, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		condition.c.format
	}
	
	// TODO: implement for BasicCondition, CompositeCondition
}
